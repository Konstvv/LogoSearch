import cv2
import pickle
import os
from sklearn.neighbors import NearestNeighbors
from Vectors import Vectorize, stringtoarray, arraytostring


class Similarity:

    def __init__(self):

        self.vect = Vectorize(modelname='model.h5')
        self.vectors = []
        for doc in self.vect.vectors.find():
            vector = stringtoarray(doc[self.vect.str_vector])
            self.vectors.append(vector)
        print('Vector file has been processed')

        self.knn = NearestNeighbors(metric='cosine', algorithm='brute')
        print('KNN has been initialized')
        if len(self.vectors) > 0:
            self.knn.fit(self.vectors)

        print("Number of images analyzed: {}".format(len(self.vectors)))

    def ind_similar(self, image, n_neighbors=5):
        values = []
        vec_to_knn = [self.vect.img_to_vec(image)]

        if len(self.vectors) == 0:
            raise Exception('No files in the Vectors database.')
        else:
            dist, indices = self.knn.kneighbors(vec_to_knn,
                                                n_neighbors=n_neighbors)
            for i in range(len(indices[0])):
                vector = self.vectors[indices[0][i]]
                docid = self.vect.vectors.find_one({self.vect.str_vector: arraytostring(vector)})[self.vect.str_id]
                distance = dist[0][i]
                values.append({'DocId': str(docid), 'distance': str(distance)})

        # print(values)

        return values

if __name__ == '__main__':
    from Vectors import stringToRGB

    sim = Similarity()

    # str64 = "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"
    str64 = "iVBORw0KGgoAAAANSUhEUgAAAOEAAADhCAMAAAAJbSJIAAAAkFBMVEX///8AAAC0tLSHh4f7+/v29va9vb3p6en19fXKysrf39/u7u75+fny8vLo6OjU1NTGxsaXl5eurq6mpqY3NzclJSXAwMBTU1NAQEDa2tofHx9xcXGOjo7S0tKUlJQtLS1iYmIVFRWenp5tbW1HR0cwMDBVVVVnZ2d9fX07OzsLCwuIiIhcXFwZGRl5eXkRERFmRo2sAAAUQklEQVR4nO1dZ3vizA7d0DGBJJRQQkIJaWw2+///3Y0xxpZ0NJINhH2f556PFHuKRjoqM/Pr1/9xEnR7UXTTblT6g8GgX7lvT6Oo2b10o06DqF2pvo0/ZlcSo8n4ed5o9y7dxPJ47H8NQccEtpNqZXrpxhZFp1GdeDqXw2R++18R2077vWjvUoyrj/VLN99Cp//6t2T3EsyWjdalO6GjNfg4qncpXiu1S3cFodVYnqR7CR7a/1onoyqyB8fg5e5fMiO3mxN3L8Hy5tIdS1Drj87SvxjDxqV7903H7v6crX8xXvoXXpB3q7P2L8aif8H+DdzN3C42z9X1N+vu78j3+n25WWy9fx5dSlYrK0frhp/f5DrCktaaftPyVw93/Xj84b7FuHm1mrV4GEw9Gr/3uH42ldXDT9uO1oPRomqlU0RFXPf61hPnZ+sMQiXYls0gKvXUm7sg6/v7c6La+wy0YzxoHvPodYg8vP+QfxXQoMPB8cslelqoz1/dn6D9Frq6hnk+lRi1dSH5OtErdNxrrx6tr0/4ms58pb3nvGS19q68d3Nyl6410IR1cOI35dFRwhPD23O8raZRirezUdU2fuHL+UhVH/dxVM4amVjDt80q53lb8KVXZxlUzDnm5w6ONfHSfzr5i2rQEi+Pse5eTCHTeTjxW3ooDPPnJ+xvDMgxxieVnhv0ivcSr6jVrmslNGETxfE+OsUfpOERPH9VwEJ0btr9+cPneDP5GL4MPybj1+XXU6U9LTBEiOuPTrZGkJVYOiPTzcbTWI/kjD7XDedMNJEtPlEXG+DRnthJLVpbPl+Cr37PI7lP4K8nMYyggwvPg9tFgoyuJ96CyM4JughEdOlaP50CHbyaudqCJPVoQQVKxmtsvwr00MumgdgfqVGBmXATpmmBHro9L8niRkd1sSfbUsA98ydKC/i1Ui1MjnBMayv+tFkRsQ/Hq/IoksaXYjUu2q8MgotOCtGYmjelUayJkkGW5qjPoiUFedrc2cOCDlhPeP/rYg9IISxsYKjbkAJEvg7O4MDd6aauI7pYyge49Xew9m0Y4BehwGqG37AXIbPUEmyiRBRTqFG9gzv1BiVNjBIEbF0s4QtVcYtZXBTuYI2relXJ1BMrPIFfrhwdfIX/TL5TkxU9rsWei/aQE5KZZnQeU80GNb4SZiGAblhqaT408yRkrGAildvVrfaiTB3BQWzZHRzB52YipClaYRcLkXDBmpUFUc+rEjgINjmFmj5Ph6tKI/ksvBTp4Zj9WVHGEVFpd+gnMP5BAGklMcVjJeV0x56kDQUAXz2KQWWO1Qi6sVapDeQjTIa0CDCnJG1vB7mhfsM/6/PGwhVjkVMo/4IMKW1nNQAjL+diMjrEapTLiGIw6uFaRWxk5O+wz8YVqlNO+dxgEUGcExqMarCHUMejecfGgFMKl5PSZX/C2hrG2qHBAD5mDvDhsAAFhwHYQLuozZuj1ZoRgHqRK+Y8ICVF4Vm1iyzk7/AymILEXOa30mBoMELkFFJS4bXtAQWVi4gd02DaHSoxlYst0HjU9LDiJ3p6U/05VDdMbbxbHWS/h8opUIwB26CTU0hJA34zHG/mohnKpkZ/PUJzEpK6DXqoOikviCPUQuYF6XUmp7AJGZiRQ2McdtzhCGoLCy7bIEWANp3JSDBlVKe/RWRGutcEkIQpyhFrhZfg86EfTv8SZOBsCaAWWCWJkCXjVkNDpI1GCqQZGL0PBLY6NPWBbIvkagxQ8gSF3QFS0jf40xyQMqPB/g+9h3QKF0APKAUnOUAPo4Z+OURNCDOgHYANZf9SEw8t+3chfhJ6PCKn0IA7QqxITmnkU1WnVCdB1m+tkitFFwAF/BepxbpjYwrSDtf0J5qjuHX8ylGVDQ2GVFCQTDhSHTiET2dHiXzSuIcy02ptYgaYSJIpIzgQjnSV4u97fkSnR6sVdUwiMhg1HsKFw2xHdbSAA1PXcJTpElMj3A45ggaDZ0GgQjJNhZ6/vKYrGI0ydflUhSsmQ+Iv+h8PUKLf6F7FAThAHoNaauBMUtc+wHwcG2Xg8NCyJtc8A+jhNDqEQI1QOQ6EyK/tbbBQS9FVgFS+w1TgwFUCGliRioza8sCDPCMNF0s+3gApqWOJh8okKLERxogugaCjzBwQBKjK8uINNbW9T/NPqF30/1v+LV2n4SRHOD64AxLCbsYooLA5TEU4HU5tLncTiddnuMkOlQcVSbZQYNjMNhU4b3AA5feM+1DeaFUOOKqd0N+yEiJkrXicFsCqnKLCRb+jtM6KyDkqEKBKSBcKXOa2AltZ255oFRY1LIQPasQogy1QcKWlCwUt82AAKoFdUEfCw2QcqaK1K9ccJWvQYCRfwWXuMBX2zjXiXRLWUin4JIcnDA3Gkz6CtqkwY7185POiQuIcMBDNYEcz4GLeaeEZ0ogOU+GpQSSkOaeYrskXrhos25GDBiNewHA5aSHVDK76RaJNl9nndBm66jVtTxiW/cZzj7IxjoJiV6kFicevsmp74i7g6g8B2xOGy214tUQf26YC/k2C/Cdj32QZOoucbd0Hw5YD7P+YD/NW7pI0TRbwXeU/Fi1owCRfIGcmhzBDFwqvPVw45nAjXkGoy8GDoXxJ2IolnlXbE4ZRMRiAsk0F9nyXQp1Re5F+SrSGMMf1leItmq1y7xSwTQXOz3dkUIO6dulskZkVdvVGY7xmCgMbDADbVOCirHcgcZ/ob+RDoQHvNPVqOwMo8wFge2M4bBQ3QCQLCXFLVQ0Jjwiz84q6vYPtCfv2ZtjCgMNG8f9EASpZcstsKA6YiWmPP8UusZ0nMlzp3BuCgAUQv1rxzAiTRDy7vfCRdS7alCgnrMpsT9hTo2SbClwkk0QH+addIpFJ9ofMq9DwyXMwG7c9Yc9OCPsYO1yQl5BpEdMilicZYaJKhdrcB1cwK7QPobM9MdtU4GLvvTstlighaG35kdBN+xHGfr/tCdsGw44X4NrIvT8krBuZsKT/JLUn6F8aAsTW2/SETYNhqytcUpl6qELV3Mv/ElePu06R7z06LINhmwq8WSSdF5EGIk3aiV6XUGj++yzbgN1Gk1Eau7bk9jgO7Plm64MLFxGK3dsJoxD8L4sj4xVle8Jhg2GbCqzjMqInlGn+z7uQH1H5YsQz1xTvv7I94bDBMP++hH/LTZTQjflyhFGX91DkhHJGHVMnXAyUR6i83FbG2PPNEUbRrPyq2+2EIXk9UbObY+XKfmvzcMCQwTBNBeZ9+cofYS2JaojVFMnYCIOfNwdYLZqecCDwY3sVmC7mwzpCExEaEq9iImZiyvMDguvFWLEOgG4wzACUkvPN/0RwEZILjntI5oD3sEY0Aa5AMZu5aVQUmFUPeHDIpAjKTIrQY01OWA6PBrdIG3AhhCMtVhZKlSFpVED9XyWTQkgF7yGlA4ptc+SESwKrb5rrFT0kU9bmXeZSQb0thV84KibL4Q8mtZRHiR6SZXfLe8gjPh22GRXzb98hLcWBPV9WHynsCenhPe+hMYcK/z7XJMKXcX/GnsMi61Dz1Xy70osCR6J5YMFehwV06ZUmOEWOMfEDxwd4cNXWpQXs4Te2ePGfYxKdK8K2h35Og3+xgyMnXBjY8xWmyeY0fl66g2KEg57w8+8qwjwYA8FeV1cQfZuXhn0LGU3DKQR0IFiKleY/BaOR2POVQQ/btyCvEVMug75KHDtAMfXduYHliyO0YOOG7R96ffwDMP8OhCP0DHwgBoIJIvC3hY+f/3Ln43vjNAcohciqJxyKRak1s8qfwKlFwTjNTmt4Y20Z8JyonnDodBw1log9X7Ta7VibM16aA9Zy9ZXS2EAHVc9LWeygiiccL13uPvLFvPPAlkqZj3BcXwnUYM8XWV1PzDuct0DhPrjHXKv6CRcg4Y1UyrZ6lAgS5hAkmly5JwrMGKEnbOXXYPkYLjyD7FcYC8Jbk+VMplUETGE8FPNvOInWSfTw+fin0A315A89OWAGUQivNiG0QWKH7uqoATRywEllmyOPL4DFCChe+/QmsAywEwoXgdiIStqQBrHDtRiQHitRXlkYY58YI4cFa1985JRQemTNpdTPrKcBwGZcZKwddb3SLcHa19kOWE8TronC+lxhVXyrqKcolBMVPCrXuFJQjAacLrOuDQHrSGaTfYdasidjPoFzXOIFtK4t7T+VcKFqcNXZEreWmrcyNVGKAcWJRrFk6To5fLzKfyo4r+IXYQEkImfs4knRdDxX8bPC9aWZtxuuEVZSYEpl+Z/QoxTkyamyUwBPoazoU2qEiYxLQ6AchYGpW37G0YpC5T/51Ys9X+UcAPkw8nX2LKNWXxFTzL9z1dFL2Bl0XH02Q4p7rYQ7xHCQWv1t9ipjv4WSA93iScw8YeTFLmE5bvYffLiMEnGW4kZ4T17gjT0zSg0vpo+tdCWivH+ED/w4jKFCY5XUj2zASPuaGl0xN8oqgGcsZcErNFnxGKNpSsmp72g9taHUVkzVR8jXKFUvmH+nTB5Q0nocMUDaci+GCt1VDk+T26UJZaNuNOGGS/FPJcoET5hJJwRZk0RpI4uXNAB7IlothKRVpFSVNsDYQ9pStj9ivZA4ckjtJ14MIp67daK4nUoASEarqEKijbP2ASsH4yghsThQjihpavfA+q3HOkLZ54vfDRZTaB+wtZdbK+3BNVkRHKXMqqGezNV9vkpdmVyzNOTPV6m1H1+5Um4J2/RNw/4CSnoQFKRQIvVoa0XNyTVLLQL3HK0zFbTQLSZZN7C1mRAh//lT8XyVrNZK/pL6NeJr61wMpWhGceLRMdytjJQjg3GruE1KklGuAqpLZMOss020ScQDjzh3/g3IYOBKFoVtAPJDE4FSQ5jn0ygnWPovsc2vJ0/8JoHCuSXnpesM0T/rjCFRtLCH95IxGuBwXoilpYnB5gia6UTqmnI6YM6UUz29t2fQyTjicqAYUqLZOVFw8ZhnfeEdMuEzYw5g7BmoQgTFDoPgASWWWGuZ57Up1wD47lDhuth3qwjW4IgP018oUUzzzD3s7JupiRitFfuXK9DYxXwYGGHXmXuOcxOxnHruCZTUy7NxD+tvIKPOcxPtsy9lvU4M/Qy1DDJN6DAY+DolNPTOsy+ZB4FceKxP7elA+Wl74x7m3IAZeM8v5WfQohwQdKOWZluReNsGA9aioObTQFLgDFrPOcKwgM26iwgqffNGQCgwSLgZswspd8dZ0KKmNoZ1sgpW+pbBQCl+qCVpxVn4NhbHed4wdhk+PUEJtBg7vdHaHSG252h0Bs+Z7ChJEs5QaLu/wtlFtHbRPxh1tXbIM6PuPVdfLbDcQTuQKCjciHNDO8fSKuYxL567EUDBYkgx6gXEoWoiwLmhFWDjbR+2xPTSHzg5MmoTUoz6FryAXwJqS1z38znOU2HtwdvU5QDrVjawGyNwaYqMc2MxYV6r5zgV3z0zonZYb6x2oUkM1WBI9Ys7yOyQ79Zd311BQlBVJR3ooPf09Cst4M/1uvM0Kd99T1zdaB5LeKOwYjBEbYkvKeUN/zjv7OJGQ+Hf4d3aiurjnqgiIOxWiZk3+iNERFm+TETwvUnWXhNsMOh5JzNlprmSLnChPY/CKopySmUJ8m/r+BNoMCjn3ih+Fl8n/hAlCP9q9x+OrTeYG/fgbTqEBGkN55LsPCxwD/cdlsTfAuzAvq8CGAwS2NR8IREML3Ix9K8C95C2c8EiGf+Gl5NQAB2cC62q95AK2uqNwB6a5r5Ltps52FsxDPaZEsBg5Bqv5gyiFXuKfTQwR4H7gLMFIcbRvmYAGIyD/Oj3ATe5vXSW0BEINa938TqdRq42fNsSmRU7hDz0pI8MNJS40xkUCAR8y/ZeqJlZsU/KisEMxl45feqNFjPoLPMUEA7EJuDnDnZxOhrLdO7xpmdJJbGiYcB6R6KD3iJIARFXU9XNN1q7sSces/f2eGIwdmQwFC6LRJy48I3VB8hDnGYhea/PqSS3zKNr9iAr/PslQcUvk8K+swsxgJgF98B07/Lfe0xFgpyxHryEt2jI7NDQe0cuBDgQL7yoW7nGhm/ByyNnMAxmIuujZt5zYBWAQgHvsnbc73WAxpg4QB3okR2EJm3pc8OKnELgO622B3zNUoaQAlTsLDwbRboePpPClS9FoeiCdNv/YHvD1rcmjgauY122X/2mh3O5b5EuDsS9nJL6q9d4GsM85w6jz/W94yaG3YNQ4PwEIpoA6YxVgZBB56bdnz98jjeTj+HL8GMyfl1+PVXa0wJqHlmeoHEuCHiK6nsJO1SrXddKeAE9pLVejtai5BUoHbsqyXcLAxZhb9yBNR9qMPcb4P+nwxQyh/JcVAXWi/OjKJMDTXzgtL9gsABwccvMVxJVEjWlIvJM60Px2BfnW44DXBM1ct1XUgYd5SShF1+RWkHUKor3tSyhjd0vVQraryYVL3f2orvWWJ+33LMk1DNzZutT6pzmXLvCa+RMoJVHS3cZnq0TIry41a83d92JdCwCh84OB8cbyGiuX9b5UxwDcqgU46M6Ga1Dx6J9OVn6CRA+hXszKOfU3NwFs6nbUy0CF+qW5/de6RTRrte9vnXZzFlYTAg3ujbYY/QwmPZs01XrPd49m/fkPv8EA+Zo6J5thuHnvNGO8HS2preV6qsnIvfxowKag+N65z22i81bdT0Y9PuV/mAwWL8vN/adXylGP+WlIaw983gcFp6Y0BnRWttXTR+Dl/4ZSagTtX6RsGExTC4pn3nc2jfDlcHy7BS0AKKqX3H48HJ3CfsQQv3el/D14aF9+eUHUO/b96968Fr5J7uXoFN5te9mDmG2bJw4Snh6dNrVslM5rj6eO3R3KnQahXu5md/+nG90Ijz2v4aeTP52Uq2cKId0CUTtyu+38QeyJaPJ6/O88fivGYWS6PaiaNpuxLS7X6nct6dR1PznNcp/Bf8DZkgYJAdIxrsAAAAASUVORK5CYII="
    img = stringToRGB(str64)

    v, _ = sim.ind_similar(img, n_neighbors=7)

    print('True DocId: 52032')